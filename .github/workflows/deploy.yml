name: Deploy Go Bot Database Migrations, Build and Push Docker Image

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run tests
        run: |
          make test
  image: 
    permissions: write-all     # <- needed to push to container registry
    runs-on: ubuntu-latest
    needs: test   # <--- wait for test job to succeed
    environment: production
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Set up Google Cloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ vars.GC_AR_DC_URL }} --quiet

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ vars.GC_AR_URL }}:latest
            ${{ vars.GC_AR_URL }}:sha-${{ env.SHORT_SHA }}

      - name: Deploy latest image to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: protein-bot
          image: ${{ vars.GC_AR_URL }}:latest
          region: europe-west1
          flags: "--allow-unauthenticated"
      
  migrate:
    runs-on: ubuntu-latest
    needs: image   # <--- wait for image job to succeed
    environment: production
    env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ vars.DB_HOST }}
        DB_PORT: ${{ vars.DB_PORT }}
        DB_NAME: ${{ vars.DB_NAME }}
    steps:
      - uses: actions/checkout@v3

      - name: Debug environment
        run: |
          echo "Current directory: $(pwd)"
          echo "DB_HOST: $DB_HOST"
          echo "DB_PORT: $DB_PORT"

      - name: Run DB migrations
        run: |
          make migrate-up