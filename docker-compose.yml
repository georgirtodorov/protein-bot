version: '3.8' # Specify the Docker Compose file format version

services:
  protein-bot: # Define the protein-bot service (your Go app)
    build:
      context: . # Build the image from from the current directory
      dockerfile: Dockerfile # Use the specified Dockerfile
    image: protein-bot # Name the built image
    container_name: protein-bot # Set a custom container name
    restart: unless-stopped # Restart the container unless it is explicitly stopped
    depends_on:
      - db # Ensure the database service starts before protein-bot
    environment:
      - PORT=${APP_PORT}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "8080:8080" # Map host port 8080 to container port 8080
  db: # Define the database service
    image: postgres:16 # Use the official PostgreSQL 16 image
    container_name: protein-bot-db # Set a custom container name for the database
    restart: unless-stopped # Restart the container unless it is explicitly stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ${DB_DATA}:/var/lib/postgresql/data # Persist database data using a named volume
  pgadmin:
    image: dpage/pgadmin4
    container_name: protein-bot-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db # Ensure the database service starts before protein-bot
    ports:
      - "${PGADMIN_PORT}:80"   # Access pgAdmin at http://localhost:8000
    volumes:
      - ${PGADMIN_DATA}:/var/lib/pgadmin  # <- persists pgAdminâ€™s own settings